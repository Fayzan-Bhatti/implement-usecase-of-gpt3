{"ast":null,"code":"var _jsxFileName = \"F:\\\\P\\\\src\\\\components\\\\ProductDescription.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Container, Form, Button, Card } from 'react-bootstrap';\nimport { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst editorRef = useRef(null);\n\nconst log = () => {\n  if (editorRef.current) {\n    console.log(editorRef.current.getContent());\n  }\n};\n\nconst {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\n\nclass ProductDescription extends Component {\n  constructor() {\n    super();\n\n    this.onFormSubmit = e => {\n      //Start by Preventing the default\n      e.preventDefault();\n      const formData = new FormData(e.target),\n            formDataObj = Object.fromEntries(formData.entries());\n      console.log(formDataObj.productName); ////OPENAI///\n\n      const configuration = new Configuration({\n        apiKey: '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'\n      });\n      const openai = new OpenAIApi(configuration);\n      openai.createCompletion(\"text-davinci-002\", {\n        prompt: `Write a detailed, smart, informative and professional description for ${formDataObj.productName}`,\n        temperature: 0.8,\n        max_tokens: 100,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0\n      }).then(response => {\n        this.setState({\n          heading: `AI product description Suggestion for: ${formDataObj.productName}`,\n          response: `${response.data.choices[0].text}`\n        });\n      }); //    this.setState({\n      //      heading:`AI product Description Suggestion for:${formDataObj.productName }`,\n      //      response: `The Respnse from OpenAI will be shown here`\n      //    })\n    };\n\n    this.state = {\n      heading: 'AI Response of:',\n      response: '..... await the response'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Generate Product Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.onFormSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"What Product would you like to get a description for?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"productName\",\n                  placeholder: \"Describe your Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"Enter as much information as possible for more acurate descriptions.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"dark\",\n                size: \"lg\",\n                type: \"submit\",\n                children: \"Generate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: [\" \", this.state.heading, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\" \", this.state.response, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container bg-dark\",\n        children: [/*#__PURE__*/_jsxDEV(Editor, {\n          onClick: () => {\n            if (this.state.modalShow) {\n              this.closeDropdown();\n            }\n          },\n          id: \"myEditor\",\n          apiKey: \"aomhk3dk1y1no3mai7xz9fbgd26lzimwz2p7m7bkcdr2kyn2\",\n          value: this.state.composerContent,\n          init: {\n            menubar: false,\n            branding: false,\n            content_css: \"/myStyle.css\",\n            selector: \"textarea\",\n            plugins: [\"lists\", \"image\", \"paste\", \"wordcount\", \"tabfocus\" // \"spellchecker\",\n            ],\n            setup: editor => {\n              this.editor = editor; // editor.on(\"blur\", function (e) {\n              //   GlobleI.saveArticle();\n              // });\n            },\n            statusbar: false,\n            resize: false,\n            toolbar_sticky: true,\n            paste_as_text: true,\n            // force_p_newlines: true,\n            force_br_newlines: true,\n            toolbar: \"undo redo | formatselect | \" + \"bold italic backcolor | alignleft aligncenter \" + \"alignright alignjustify | bullist numlist outdent indent | \" + \"removeformat | help |wordcount \"\n          } //onKeyDown={this.handleTab}\n          ,\n          onInit: () => {\n            this.setState({\n              init_editor: true\n            });\n            this.refreshWords();\n            this.saveArticle();\n            if (this.state.articleText.length === 0) this.editor.focus();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), \"fayzan\", /*#__PURE__*/_jsxDEV(Editor, {\n          onInit: (evt, editor) => editorRef.current = editor,\n          initialValue: \"<p>This is the initial content of the editor.</p>\",\n          init: {\n            height: 500,\n            menubar: false,\n            plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n            toolbar: 'undo redo | formatselect | ' + 'bold italic backcolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ProductDescription;","map":{"version":3,"sources":["F:/P/src/components/ProductDescription.js"],"names":["React","Component","Container","Form","Button","Card","useRef","Editor","editorRef","log","current","console","getContent","Configuration","OpenAIApi","require","ProductDescription","constructor","onFormSubmit","e","preventDefault","formData","FormData","target","formDataObj","Object","fromEntries","entries","productName","configuration","apiKey","openai","createCompletion","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","then","response","setState","heading","data","choices","text","state","render","modalShow","closeDropdown","composerContent","menubar","branding","content_css","selector","plugins","setup","editor","statusbar","resize","toolbar_sticky","paste_as_text","force_br_newlines","toolbar","init_editor","refreshWords","saveArticle","articleText","length","focus","evt","height","content_style"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Container, Form, Button, Card } from 'react-bootstrap'\r\nimport { useRef } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n\r\nconst editorRef = useRef(null);\r\nconst log = () => {\r\n  if (editorRef.current) {\r\n    console.log(editorRef.current.getContent());\r\n  }\r\n};\r\n\r\nconst { Configuration, OpenAIApi } = require(\"openai\");\r\n\r\nclass ProductDescription extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      heading: 'AI Response of:',\r\n      response: '..... await the response'\r\n    }\r\n\r\n  }\r\n\r\n  onFormSubmit = e => {\r\n    //Start by Preventing the default\r\n    e.preventDefault()\r\n\r\n    const formData = new FormData(e.target),\r\n      formDataObj = Object.fromEntries(formData.entries())\r\n    console.log(formDataObj.productName)\r\n\r\n\r\n    ////OPENAI///\r\n\r\n\r\n    const configuration = new Configuration({\r\n      apiKey: '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',\r\n    });\r\n    const openai = new OpenAIApi(configuration);\r\n\r\n    openai.createCompletion(\"text-davinci-002\", {\r\n      prompt: `Write a detailed, smart, informative and professional description for ${formDataObj.productName}`,\r\n      temperature: 0.8,\r\n      max_tokens: 100,\r\n      top_p: 1,\r\n      frequency_penalty: 0,\r\n      presence_penalty: 0,\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          heading: `AI product description Suggestion for: ${formDataObj.productName}`,\r\n          response: `${response.data.choices[0].text}`\r\n        })\r\n      });\r\n\r\n\r\n    //    this.setState({\r\n    //      heading:`AI product Description Suggestion for:${formDataObj.productName }`,\r\n    //      response: `The Respnse from OpenAI will be shown here`\r\n    //    })\r\n  }\r\n\r\n  render() {\r\n \r\n    return (\r\n      <div>\r\n        <Container>\r\n          <br />\r\n          <br />\r\n          <h1>Generate Product Description</h1>\r\n          <br />\r\n\r\n          <div className='container-fluid d-flex'>\r\n            <div className='container'>\r\n\r\n              <Form onSubmit={this.onFormSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>\r\n                    What Product would you like to get a description for?\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"productName\"\r\n                    placeholder=\"Describe your Product\" />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Enter as much information as possible for more acurate descriptions.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"dark\" size=\"lg\" type=\"submit\">\r\n                  Generate\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n\r\n            <div className='container'>\r\n\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Title><h1> {this.state.heading} </h1></Card.Title>\r\n                  <hr />\r\n                  <Card.Text><p> {this.state.response} </p></Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </Container>\r\n        <div className='container bg-dark' >\r\n\r\n        <Editor\r\n                          onClick={() => {\r\n                            if (this.state.modalShow) {\r\n                              this.closeDropdown();\r\n                            }\r\n                          }}\r\n                          id=\"myEditor\"\r\n                          apiKey=\"aomhk3dk1y1no3mai7xz9fbgd26lzimwz2p7m7bkcdr2kyn2\"\r\n                          value={this.state.composerContent}\r\n                          init={{\r\n                            menubar: false,\r\n                            branding: false,\r\n                            content_css: \"/myStyle.css\",\r\n                            selector: \"textarea\",\r\n                            plugins: [\r\n                              \"lists\",\r\n                              \"image\",\r\n                              \"paste\",\r\n                              \"wordcount\",\r\n                              \"tabfocus\",\r\n                              // \"spellchecker\",\r\n                            ],\r\n                            setup: (editor) => {\r\n                              this.editor = editor;\r\n                              // editor.on(\"blur\", function (e) {\r\n                              //   GlobleI.saveArticle();\r\n                              // });\r\n                            },\r\n                            statusbar: false,\r\n                            resize: false,\r\n                            toolbar_sticky: true,\r\n                            paste_as_text: true,\r\n                            // force_p_newlines: true,\r\n                            force_br_newlines: true,\r\n                            toolbar:\r\n                              \"undo redo | formatselect | \" +\r\n                              \"bold italic backcolor | alignleft aligncenter \" +\r\n                              \"alignright alignjustify | bullist numlist outdent indent | \" +\r\n                              \"removeformat | help |wordcount \",\r\n                          }}\r\n                          //onKeyDown={this.handleTab}\r\n                          onInit={() => {\r\n                            this.setState({\r\n                              init_editor: true,\r\n                            });\r\n                            this.refreshWords();\r\n                            this.saveArticle();\r\n                            if (this.state.articleText.length === 0)\r\n                              this.editor.focus();\r\n                          }}\r\n                        />\r\nfayzan\r\n\r\n\r\n\r\n          <Editor\r\n            onInit={(evt, editor) => editorRef.current = editor}\r\n            initialValue=\"<p>This is the initial content of the editor.</p>\"\r\n            init={{\r\n              height: 500,\r\n              menubar: false,\r\n              plugins: [\r\n                'advlist autolink lists link image charmap print preview anchor',\r\n                'searchreplace visualblocks code fullscreen',\r\n                'insertdatetime media table paste code help wordcount'\r\n              ],\r\n              toolbar: 'undo redo | formatselect | ' +\r\n                'bold italic backcolor | alignleft aligncenter ' +\r\n                'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                'removeformat | help',\r\n              content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ProductDescription\r\n"]},"metadata":{},"sourceType":"module"}