{"ast":null,"code":"var _jsxFileName = \"F:\\\\P\\\\src\\\\components\\\\ColdEmail.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { Container, Form, Button, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\n\nclass ColdEmail extends Component {\n  constructor() {\n    super();\n\n    this.onFormSubmit = e => {\n      //Start by Preventing the default\n      e.preventDefault();\n      const formData = new FormData(e.target),\n            formDataObj = Object.fromEntries(formData.entries());\n      console.log(formDataObj.email); ////OPENAI///\n\n      const configuration = new Configuration({\n        apiKey: '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'\n      });\n      const openai = new OpenAIApi(configuration);\n      openai.createCompletion(\"text-davinci-002\", {\n        prompt: ` ${formDataObj.email}`,\n        temperature: 0.8,\n        max_tokens: 250,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0\n      }).then(response => {\n        this.setState({\n          heading: `write an email where keypoints are: ${formDataObj.email}`,\n          response: `${response.data.choices[0].text}`\n        });\n      }); //    this.setState({\n      //      heading:`AI product Description Suggestion for:${formDataObj.email }`,\n      //      response: `The Respnse from OpenAI will be shown here`\n      //    })\n    };\n\n    this.state = {\n      heading: 'The Respnse from the AI will be shown here:',\n      response: 'AI Generated Results Here...',\n      email: '',\n      email1: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Generate Cold Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Generate Cold Email for any type of the product, simple enter the name of product to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.onFormSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"What Product would you like to get a description for?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"email\",\n                  placeholder: \"Write an email to...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"Enter as much information as possible for more acurate descriptions.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                size: \"lg\",\n                type: \"submit\",\n                children: \"AI generator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: [\" \", this.state.heading, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: [\" \", this.state.response, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          style: {\n            marginTop: '50px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            id: \"myEditor\",\n            apiKey: \"aomhk3dk1y1no3mai7xz9fbgd26lzimwz2p7m7bkcdr2kyn2\",\n            init: {\n              menubar: false,\n              branding: false,\n              content_css: \"/myStyle.css\",\n              selector: \"textarea\",\n              plugins: [\"lists\", \"image\", \"paste\", \"wordcount\", \"tabfocus\", \"spellchecker\"],\n              setup: editor => {\n                this.editor = editor;\n              },\n              statusbar: false,\n              resize: false,\n              toolbar_sticky: true,\n              paste_as_text: true,\n              force_br_newlines: true,\n              toolbar: \"undo redo | formatselect | \" + \"bold italic backcolor | alignleft aligncenter \" + \"alignright alignjustify | bullist numlist outdent indent | \" + \"removeformat | help | wordcount \",\n              content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ColdEmail;","map":{"version":3,"sources":["F:/P/src/components/ColdEmail.js"],"names":["React","Component","Editor","Container","Form","Button","Card","Configuration","OpenAIApi","require","ColdEmail","constructor","onFormSubmit","e","preventDefault","formData","FormData","target","formDataObj","Object","fromEntries","entries","console","log","email","configuration","apiKey","openai","createCompletion","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","then","response","setState","heading","data","choices","text","state","email1","render","marginTop","menubar","branding","content_css","selector","plugins","setup","editor","statusbar","resize","toolbar_sticky","paste_as_text","force_br_newlines","toolbar","content_style"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { Container, Form, Button, Card } from 'react-bootstrap'\r\n\r\nconst { Configuration, OpenAIApi } = require(\"openai\");\r\n\r\nclass ColdEmail extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      heading: 'The Respnse from the AI will be shown here:',\r\n      response: 'AI Generated Results Here...',\r\n      email: '',\r\n      email1: '',\r\n    }\r\n\r\n  }\r\n  onFormSubmit = e => {\r\n    //Start by Preventing the default\r\n    e.preventDefault()\r\n\r\n    const formData = new FormData(e.target),\r\n      formDataObj = Object.fromEntries(formData.entries())\r\n    console.log(formDataObj.email)\r\n\r\n\r\n    ////OPENAI///\r\n\r\n\r\n    const configuration = new Configuration({\r\n      apiKey: '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',\r\n    });\r\n    const openai = new OpenAIApi(configuration);\r\n\r\n    openai.createCompletion(\"text-davinci-002\", {\r\n      prompt: ` ${formDataObj.email}`,\r\n      temperature: 0.8,\r\n      max_tokens: 250,\r\n      top_p: 1,\r\n      frequency_penalty: 0,\r\n      presence_penalty: 0,\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          heading: `write an email where keypoints are: ${formDataObj.email}`,\r\n          response: `${response.data.choices[0].text}`\r\n        })\r\n      });\r\n\r\n\r\n    //    this.setState({\r\n    //      heading:`AI product Description Suggestion for:${formDataObj.email }`,\r\n    //      response: `The Respnse from OpenAI will be shown here`\r\n    //    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <br />\r\n          <br />\r\n          <h1>Generate Cold Email</h1>\r\n          <br />\r\n          <h4>Generate Cold Email for any type of the product, simple enter the name of product to get started.</h4>\r\n          <div className='container-fluid d-flex'>\r\n            <div className='container'>\r\n              <Form onSubmit={this.onFormSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>\r\n                    What Product would you like to get a description for?\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"Write an email to...\"\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Enter as much information as possible for more acurate descriptions.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                  AI generator\r\n                </Button>\r\n\r\n              </Form>\r\n\r\n            </div>\r\n\r\n            <div className='container'>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Title><h1> {this.state.heading} </h1></Card.Title>\r\n                  <hr />\r\n                  <br />\r\n                  <Card.Text><h4> {this.state.response} </h4></Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <div className='container' style={{ marginTop: '50px' }}>\r\n\r\n            <Editor\r\n              id=\"myEditor\"\r\n              apiKey=\"aomhk3dk1y1no3mai7xz9fbgd26lzimwz2p7m7bkcdr2kyn2\"\r\n              init={{\r\n                menubar: false,\r\n                branding: false,\r\n                content_css: \"/myStyle.css\",\r\n                selector: \"textarea\",\r\n                plugins: [\r\n                  \"lists\",\r\n                  \"image\",\r\n                  \"paste\",\r\n                  \"wordcount\",\r\n                  \"tabfocus\",\r\n                  \"spellchecker\",\r\n                ],\r\n                setup: (editor) => {\r\n                  this.editor = editor;\r\n                },\r\n                statusbar: false,\r\n                resize: false,\r\n                toolbar_sticky: true,\r\n                paste_as_text: true,\r\n                force_br_newlines: true,\r\n                toolbar:\r\n                  \"undo redo | formatselect | \" +\r\n                  \"bold italic backcolor | alignleft aligncenter \" +\r\n                  \"alignright alignjustify | bullist numlist outdent indent | \" +\r\n                  \"removeformat | help | wordcount \",\r\n                content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n              }}\r\n            />\r\n          </div>\r\n        </Container>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ColdEmail\r\n"]},"metadata":{},"sourceType":"module"}